package com.tools;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.util.Locale;import java.util.Scanner;/** * @author hubing * @date 2021/09/15 10:49 **/public class MachineCode {    public static void main(String[] args) {        String property = System.getProperty("os.name").toLowerCase();        System.out.println(property);        String cpuSerialNumber = "";        String hardDiskSerialNumber = "";        String md5Result = "";        if(property.contains("windows")){            //获取cpu序列号            cpuSerialNumber = MachineCode.getCPUSerialNumber();            hardDiskSerialNumber = MachineCode.getHardDiskSerialNumber();        }else if(property.contains("mac os x")){            cpuSerialNumber = MachineCode.getUUID();            hardDiskSerialNumber = MachineCode.getBoisVersion();        }        System.out.println("key:" + cpuSerialNumber + hardDiskSerialNumber);    }    /*     *获取CPU序列号(windows)     */    public static String getCPUSerialNumber(){        String serial;        try {            Process process = Runtime.getRuntime().exec(new String[]{"wmic", "cpu", "get", "ProcessorId"});            process.getOutputStream().close();            Scanner scanner = new Scanner(process.getInputStream());            serial = scanner.next();        } catch (IOException e) {            throw new RuntimeException("获取CPU序列号失败");        }        return serial;    }    public static String getHardDiskSerialNumber(){        String serial;        try {            Process process = Runtime.getRuntime().exec(new String[]{"wmic", "path", "win32_physicalmedia", "get", "serialnumber"});            process.getOutputStream().close();            Scanner scanner = new Scanner(process.getInputStream());            serial = scanner.next();        }catch (IOException e){            throw new RuntimeException("获取硬盘序列号失败");        }        return serial;    }    /*    * Linux    * */    public static String getBoisVersion(){        String result = "";        Process p;        try {            p = Runtime.getRuntime().exec("sudo dmidecode -s bios-version");            BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));            String line;            while ((line = reader.readLine()) != null){                result += line;                break;            }            reader.close();        } catch (IOException e) {            System.out.println("获取主板信息错误");        }        return result;    }    public static String getUUID(){        String result = "";        try {            Process process = Runtime.getRuntime().exec("sudo dmidecode -s system-uuid");            InputStream in;            BufferedReader br;            in = process.getInputStream();            br = new BufferedReader(new InputStreamReader(in));            while (in.read() != -1) {                result = br.readLine();            }            br.close();            in.close();            process.destroy();            // System.out.println("获取主板序列号："+result);        } catch (Throwable e) {            e.printStackTrace();        }        return result;    }}